[
  {
    "ProjectID": "UT001",
    "type": "Utility",
    "ProjectName": "QR Code Tool",
    "InputPrompt": "The app should support QR code scanning, allowing users to scan codes in real-time using the camera or by selecting images from their local photo gallery. Additionally, the app should enable users to copy the scanned content for further use. If the scanned content is a url, users can open the broswer to view the website. The app should also support QR code generation, allowing users to create QR codes with different color themes and export them. Furthermore, the app should include a feature to query the history of scanned codes, enabling users to review past scans easily.",
    "FeatureList": [
      {
        "title": "Scan QR Code from Camera",
        "description": "Allows users to scan QR codes in real-time using the device's camera."
      },
      {
        "title": "Scan QR Code from Gallery",
        "description": "Enables users to scan QR codes by selecting images from their local photo gallery."
      },
      {
        "title": "Copy Scanned Text",
        "description": "Allows users to copy the content from a scanned QR code for further use."
      },
      {
        "title": "Open Link in Browser",
        "description": "If the scanned QR code contains a URL, users can open the link directly in their browser."
      },
      {
        "title": "View Scan History",
        "description": "Enables users to review their past scanned QR codes and their associated content."
      },
      {
        "title": "View Individual History Details",
        "description": "Allows users to view the detailed information for any individual scan in the history."
      },
      {
        "title": "Generate QR Code",
        "description": "Allows users to create their own QR codes with customizable color themes."
      },
      {
        "title": "Export QR Code",
        "description": "Enables users to export the generated QR codes for sharing or printing."
      }
    ],
    "FeatureDependencyGraph": "UT001_qr_code_tool.dot"
  },
  {
    "ProjectID": "UT002",
    "type": "Utility",
    "ProjectName": "Local PDF Reader",
    "InputPrompt": "Develop a local PDF reader application that allows users to open, view, and navigate PDF files. Users are able to import a local PDF file or an online PDF from a URL. The imported PDF files are maintained in a list, where users can adjust the groupings and delete PDF files. User can choose a PDF file to view. The tool should support basic features like zooming, scrolling, and page navigation.",
    "FeatureList": [
      {
        "title": "Import PDF from Local",
        "description": "Allows users to import PDF files from their local storage."
      },
      {
        "title": "Import PDF from URL",
        "description": "Allows users to import PDF files from an online URL."
      },
      {
        "title": "View PDF List",
        "description": "Displays a list of imported PDFs, with options to group and delete them."
      },
      {
        "title": "View PDF Document",
        "description": "Enables users to view the content of the selected PDF document."
      },
      {
        "title": "Group PDFs",
        "description": "Allows users to organize imported PDFs into groups for easier management."
      },
      {
        "title": "Delete PDFs",
        "description": "Allows users to delete PDFs from the list."
      },
      {
        "title": "Zoom In/Out",
        "description": "Allows users to zoom in and out of the PDF document for better viewing."
      },
      {
        "title": "Scroll Up/Down",
        "description": "Allows users to scroll through the PDF document vertically."
      },
      {
        "title": "Page Navigation",
        "description": "Enables users to navigate between pages within the PDF document."
      }
    ],
    "FeatureDependencyGraph": "UT002_local_pdf_reader.dot"
  },
  {
    "ProjectID": "UT003",
    "type": "Utility",
    "ProjectName": "Smart Countdown Timer",
    "InputPrompt": "Develop a smart countdown timer application that helps users manage their time effectively. The app should allow users to create multiple timers by setting custom names and durations. When the timer is activated, it should display a countdown in full-screen mode. When the timer ends, the user should receive a notification. The timer can be paused, resumed and stoped. Users can check the history log of past timers and repeat timers.",
    "FeatureList": [
      {
        "title": "Create a Timer",
        "description": "Allows users to create a new timer with a custom name and duration."
      },
      {
        "title": "View Timer List",
        "description": "Displays a list of all created timers for easy access and management."
      },
      {
        "title": "Start Timer",
        "description": "Activates the selected timer and begins the countdown."
      },
      {
        "title": "Pause Timer",
        "description": "Pauses the active timer, halting the countdown temporarily."
      },
      {
        "title": "Resume Timer",
        "description": "Resumes a paused timer from where it left off."
      },
      {
        "title": "Stop Timer",
        "description": "Stops the active timer, and the countdown is terminated."
      },
      {
        "title": "Receive Timer Notification",
        "description": "Sends a notification to the user when the timer reaches zero."
      },
      {
        "title": "View Timer History",
        "description": "Allows users to view the history log of past timers."
      },
      {
        "title": "Repeat Timer",
        "description": "Enables users to repeat a previous timer from the history log."
      }
    ],
    "FeatureDependencyGraph": "UT003_smart_countdown_timer.dot"
  },
  {
    "ProjectID": "UT004",
    "type": "Utility",
    "ProjectName": "Color Picker",
    "InputPrompt": "Develop a color picler application. This app allows users to import a local image. Once the image is displayed, a magnifier tool will appear. Users can drag the magnifier to any part of the image, and the color at the center of the magnifier will be extracted and displayed in both hexadecimal and RGB formats. Users can copy the color code to their clipboard. Additionally, users can save their favorite colors for easy access. They can view their saved colors at any time and copy their color codes as needed.",
    "FeatureList": [
      {
        "title": "Import an Image",
        "description": "Allows users to upload a local image for color extraction."
      },
      {
        "title": "Magnifier Tool",
        "description": "Displays a magnifier on the image that users can drag to any part of the image to extract the color at the center."
      },
      {
        "title": "Extract the Color",
        "description": "Extracts the color at the center of the magnifier and displays it in both hexadecimal and RGB formats."
      },
      {
        "title": "Copy Color Code",
        "description": "Allows users to copy the color code (in hexadecimal or RGB format) to their clipboard."
      },
      {
        "title": "Save Color to Favorites",
        "description": "Enables users to save colors they like to their favorites list for future access."
      },
      {
        "title": "View Favorite Colors",
        "description": "Displays a list of colors that the user has saved as favorites."
      },
      {
        "title": "Copy Favorite Color Code",
        "description": "Allows users to copy the color codes from their saved favorite colors."
      }
    ],
    "FeatureDependencyGraph": "UT004_color_picker.dot"
  },
  {
    "ProjectID": "UT005",
    "type": "Utility",
    "ProjectName": "English Vocabulary Learner",
    "InputPrompt": "Develop a vocabulary learning application. This app allows users to input words along with their translations. Users cannot enter duplicate words but can modify or delete existing words. Once the user start learning, the words appear in a card format in the order they were entered. The front of the card displays the word, while the back shows the translation. Users can click on the front of the card to flip it to the back. Users have two options on the back to mark their memory of the word as known or unknown. Each word has two states: unmastered and mastered. Each time a user marks their memory as correct, the progress of that word increases by 10%. Once the progress reaches 100%, the word is considered mastered and will not be in the learning queue. Users can view a list of all entered words and their translations. In this list, users can choose to add mastered words back into the learning queue.",
    "FeatureList": [
      {
        "title": "Add New Word",
        "description": "Users can add new words along with their translations. Duplicate words are not allowed."
      },
      {
        "title": "View Word List",
        "description": "Users can view a list of all entered words and their translations. The list includes options to edit, delete, or reset mastered words."
      },
      {
        "title": "Edit Word",
        "description": "Users can modify an existing word and its translation from the word list."
      },
      {
        "title": "Delete Word",
        "description": "Users can delete a word and its translation from the word list."
      },
      {
        "title": "Reset Mastered Words",
        "description": "Users can reset the status of mastered words, bringing them back into the learning queue."
      },
      {
        "title": "Start Learning",
        "description": "Users begin the learning process where words are displayed in a card format in the order they were entered."
      },
      {
        "title": "Display a Card",
        "description": "Each word is shown in a card format with the word displayed on the front and the translation on the back."
      },
      {
        "title": "Flip the Card",
        "description": "Users can flip the card to reveal the translation of the word."
      },
      {
        "title": "Show the Answer",
        "description": "The translation is displayed on the back of the card when flipped."
      },
      {
        "title": "Mark as Known",
        "description": "Users can mark a word as known, indicating they remember it. This action increases the word's progress by 10%."
      },
      {
        "title": "Mark as Unknown",
        "description": "Users can mark a word as unknown, indicating they don't remember it. This action doesn't increase the word's progress."
      },
      {
        "title": "Mark the Word as Mastered",
        "description": "When a word's progress reaches 100%, it is considered mastered and will not appear in the learning queue."
      },
      {
        "title": "Next Card",
        "description": "After marking a word as known or unknown, users can proceed to the next word in the learning queue."
      }
    ],
    "FeatureDependencyGraph": "UT005_english_vocabulary_learner.dot"
  },
  {
    "ProjectID": "EL001",
    "type": "EasyLife",
    "ProjectName": "Local Expense Tracker",
    "InputPrompt": "Develop a local expense tracker application that allows users to log, categorize, and visualize their daily expenses. The tool should support adding, editing, and deleting expenses. Users should be able to view their expenses in a table format. The app should provide some charts (e.g., pie charts, bar graphs) to visulize the expenses. User can set a budget(monthly or yearly) and can track their expenses against the budget. Users can also generate reports (monthly or yearly), which reflect the expenses and remaining budget. The application should support exporting data to CSV for backup.",
    "FeatureList": [
      {
        "title": "Set Budget",
        "description": "Users can set a monthly or yearly budget to track their expenses against."
      },
      {
        "title": "Log Expense",
        "description": "Users can log daily expenses, categorizing them for better tracking."
      },
      {
        "title": "View Expense List",
        "description": "Users can view a table of all logged expenses, providing an overview of their spending."
      },
      {
        "title": "Edit Expense",
        "description": "Users can edit previously logged expenses, such as changing the amount or category."
      },
      {
        "title": "Delete Expense",
        "description": "Users can delete any logged expense that is no longer needed."
      },
      {
        "title": "View Expense Visualization",
        "description": "Users can view their expenses in visual formats such as pie charts or bar graphs for better insight."
      },
      {
        "title": "Generate Report",
        "description": "Users can generate reports (monthly or yearly) showing their expenses and remaining budget."
      },
      {
        "title": "Export Data to CSV",
        "description": "Users can export their expense data to a CSV file for backup or further analysis."
      }
    ],
    "FeatureDependencyGraph": "EL001_local_expense_tracker.dot"
  },
  {
    "ProjectID": "EL002",
    "type": "EasyLife",
    "ProjectName": "Decision Wheel",
    "InputPrompt": "Develop an app to help users make decisions through an interactive roulette wheel interface, with customizable questions, options, and weights. Users can input a question and several options, along with the weight assigned to each option. Based on this input, the app will generate and display a roulette wheel. When the user starts the wheel, it spins, and the position where the pointer stops will be the decision outcome. Users can reset and spin the wheel again if they are not satisfied with the decision. Users can also modify the question, options, and weights of the wheel at any time. Users can view all wheels and choose any wheel to spin. Users should be able to delete any wheel they no longer need.",
    "FeatureList": [
      {
        "title": "View Wheel List",
        "description": "Allows users to view all the wheels they have created and choose any wheel to spin."
      },
      {
        "title": "Create Wheel",
        "description": "Enables users to create a new wheel by inputting a question, options, and assigning weights to each option."
      },
      {
        "title": "Display Wheel",
        "description": "Displays the details of a specific wheel, including its question, options, and weights."
      },
      {
        "title": "Modify Wheel",
        "description": "Lets users modify the question, options, and weights of an existing wheel."
      },
      {
        "title": "Spin Wheel",
        "description": "Users can spin the roulette wheel to make a decision based on the inputted options and weights."
      },
      {
        "title": "Reset Wheel",
        "description": "Allows users to reset the wheel and spin it again if they are not satisfied with the decision."
      },
      {
        "title": "Delete Wheel",
        "description": "Users can delete any wheel they no longer need from their list."
      }
    ],
    "FeatureDependencyGraph": "EL002_decision_wheel.dot"
  },
  {
    "ProjectID": "EL003",
    "type": "EasyLife",
    "ProjectName": "Music Player",
    "InputPrompt": "Develop a music player application. The app should support auto-scan and import the local music files. The imported music are organized in the 'local music' playlist. Users can choose a playlist and play the music in that playlist. Users can play, pause and switch the music. The app should also support shuffle and repeat playing in the current playlist. Users can create new playlists and add music files from other playlists.",
    "FeatureList": [
      {
        "title": "Auto-scan and Import Local Music",
        "description": "The app automatically scans and imports local music files into the 'local music' playlist."
      },
      {
        "title": "View Playlist List",
        "description": "Users can view a list of available playlists, including the 'local music' playlist and any custom playlists they create."
      },
      {
        "title": "Create Playlist",
        "description": "Users can create new playlists to organize their music."
      },
      {
        "title": "View Playlist",
        "description": "Users can view the contents of a selected playlist, including the music within it."
      },
      {
        "title": "Play Music",
        "description": "Users can play music from the selected playlist."
      },
      {
        "title": "Pause Music",
        "description": "Users can pause the currently playing music."
      },
      {
        "title": "Resume Music",
        "description": "Users can resume the music after it has been paused."
      },
      {
        "title": "Switch Music",
        "description": "Users can switch to the next or previous track in the playlist."
      },
      {
        "title": "Shuffle Playback",
        "description": "Users can enable shuffle mode to play songs in a random order within the current playlist."
      },
      {
        "title": "Repeat Playback",
        "description": "Users can enable repeat mode to continuously play the current track or playlist."
      },
      {
        "title": "Add Music to Other Playlist",
        "description": "Users can add music from one playlist to another."
      }
    ],
    "FeatureDependencyGraph": "EL003_music_player.dot"
  },
  {
    "ProjectID": "EL004",
    "type": "EasyLife",
    "ProjectName": "Diary Journal",
    "InputPrompt": "Develop a diary app which allows users to create, edit, and view their personal diaries with various features to enhance their journaling experience. Users can write their entries with rich text formatting options such as bold, italics, and underline, and they can also insert images into their diary. Users can set a daily reminder to notify them to write the diary. The app includes a 'On This Day' feature, enabling users to view their entries from the same date in the previous year (if available). Users can search for their past entries by keywords or dates. Users can export all their diaries at any time. Additionally, users have the option to view their journal history in either a list (with reverse chronological order) or a calendar view.",
    "FeatureList": [
      {
        "title": "Create New Diary Entry",
        "description": "Allows users to create a new diary entry with rich text formatting options such as bold, italics, and underline, and the ability to insert images."
      },
      {
        "title": "View Diary List",
        "description": "Displays a list of all diary entries, allowing users to view their past entries in reverse chronological order."
      },
      {
        "title": "View Diary Entry",
        "description": "Lets users view a specific diary entry and access additional options such as editing, exporting, and deleting the entry."
      },
      {
        "title": "Edit Diary Entry",
        "description": "Enables users to edit their existing diary entries, including updating text, formatting, and images."
      },
      {
        "title": "Export Diary Entry",
        "description": "Allows users to export a specific diary entry to another format, making it easy to save or share their journal."
      },
      {
        "title": "Delete Diary Entry",
        "description": "Enables users to delete a specific diary entry they no longer wish to keep."
      },
      {
        "title": "Search Diary Entries",
        "description": "Provides a search feature where users can search for past diary entries based on keywords or dates."
      },
      {
        "title": "View Entries in Calendar",
        "description": "Displays a calendar view of diary entries, allowing users to easily navigate and view entries based on date."
      },
      {
        "title": "On This Day Feature",
        "description": "Shows users the diary entry from the same date in the previous year, if available, allowing them to reflect on past entries."
      },
      {
        "title": "Set Daily Reminder",
        "description": "Allows users to set a daily reminder to notify them to write a new diary entry."
      },
      {
        "title": "Export All Diaries",
        "description": "Lets users export all their diaries at any time, giving them a backup or allowing for sharing their entire journal history."
      }
    ],
    "FeatureDependencyGraph": "EL004_diary_journal.dot"
  },
  {
    "ProjectID": "TT001",
    "type": "TravelTicket",
    "ProjectName": "Trip Planner",
    "InputPrompt": "Develop a trip planner application that helps users organize and manage their travel plans. Users can create trips, add destinations, and specify the start and end dates for each trip. Users can choose to view their trip plans in a basic list view(default) or a calendar view(The time period of the journey is highlighted). For each trip plan, users can add notes(texts and images).  The app should provide notifications for upcoming trips and support exporting trip plans to PDF.",
    "FeatureList": [
      {
        "title": "Create Trip",
        "description": "Allows users to create new trips, adding essential details such as destination, start and end dates."
      },
      {
        "title": "View Trip List",
        "description": "Displays a list of all trips created by the user, providing quick access to view details of each trip."
      },
      {
        "title": "Send Trip Notifications",
        "description": "Notifies users of upcoming trips to ensure they are aware of their travel schedule."
      },
      {
        "title": "View Trip Details",
        "description": "Allows users to see detailed information for a specific trip, including destinations, dates, and notes."
      },
      {
        "title": "Switch to Calendar View",
        "description": "Enables users to switch to a calendar view, where the time period of each trip is highlighted for easy reference."
      },
      {
        "title": "Write Note to Trip",
        "description": "Allows users to add text or images as notes to a specific trip, enabling them to capture additional details."
      },
      {
        "title": "Export a Trip Plan to PDF",
        "description": "Provides an option for users to export their trip plans into a PDF format for sharing or printing."
      }
    ],
    "FeatureDependencyGraph": "TT001_trip_planner.dot"
  },
  {
    "ProjectID": "TT002",
    "type": "TravelTicket",
    "ProjectName": "Ticket Management System",
    "InputPrompt": "Develop a ticket management application to provide efficient ticket management, tracking, and analysis. This app allows users to create events with a specified number of tickets and ticket price. Each ticket is assigned a unique ID, and ticket information is stored in a database when the event is created. Users can export all ticket IDs in CSV format. Users can use this app to enter the ticket ID for ticket validation for the specific event. If a ticket has invalid ID or has already been used, the app should display an error notification. Additionally, the app supports various types of data visualization for ticketing analysis in the event detail page, including tracking ticket redemption rates and providing statistics on entry data by hour for each event. Users can delete an event, and all its related data will be cleared accordingly. Users can create multiple events and view and manage all events at any time.",
    "FeatureList": [
      {
        "title": "Create an Event with Tickets",
        "description": "Users can create an event with a specified number of tickets and a price for each ticket. Each ticket is assigned a unique ID and stored in the database."
      },
      {
        "title": "View Event List",
        "description": "Users can view a list of all created events and manage them from a central location."
      },
      {
        "title": "Export Tickets",
        "description": "Users can export all ticket IDs for a specific event in CSV format for record-keeping or analysis."
      },
      {
        "title": "View Event Detail",
        "description": "Users can view detailed information about a specific event, including ticket data, redemption statistics, and other event-related metrics."
      },
      {
        "title": "Input Ticket ID to Validate",
        "description": "Users can input a ticket ID to validate if it is valid or has been redeemed. If the ticket is invalid or already used, an error notification will be displayed."
      },
      {
        "title": "Ticket Redemption Rate Visualization",
        "description": "Displays a visualization showing the redemption rate of tickets for a specific event."
      },
      {
        "title": "Entry Data by Hour Visualization",
        "description": "Provides a visualization of entry statistics for the event, broken down by hour."
      },
      {
        "title": "Delete an Event",
        "description": "Users can delete an event along with all its associated data from the system."
      },
      {
        "title": "Manage Multiple Events",
        "description": "Users can create, view, and manage multiple events at any time, allowing for efficient handling of various events and their tickets."
      }
    ],
    "FeatureDependencyGraph": "TT002_ticket_management_system.dot"
  },
  {
    "ProjectID": "TT003",
    "type": "TravelTicket",
    "ProjectName": "Trip Itinerary Management",
    "InputPrompt": "Develop a travel itinerary management application which helps users create and manage travel itinerarys. Once the user create a new travel itinerarys, the app automatically generates a blank timeline. Users can input their trip events, including time slots, locations, events, and additional notes. The app will then add these events to the timeline. The app should check whether the time of event conflicts with any other existing event, and prompt the user to make adjustments. Users can generate a shareable timeline graphic, which can be exported for easy sharing. All travel plans should be listed for the users to view and edit at any time. Once the trip begins, the app will send event notifications to the user based on the scheduled start times of the events.",
    "FeatureList": [
      {
        "title": "Create New Itinerary",
        "description": "Allows users to create a new travel itinerary, starting with a blank timeline."
      },
      {
        "title": "View Itinerary List",
        "description": "Displays a list of all created itineraries for the user to view and select from."
      },
      {
        "title": "View Itinerary Detail",
        "description": "Enables users to view detailed information of a selected itinerary."
      },
      {
        "title": "Add Event to Timeline",
        "description": "Allows users to add trip events with details such as time, location, and notes to their itinerary timeline."
      },
      {
        "title": "Edit Event",
        "description": "Users can modify the details of an event already added to the timeline."
      },
      {
        "title": "Detect Event Time Conflicts",
        "description": "The app checks for any time conflicts between new events and existing events on the timeline."
      },
      {
        "title": "Delete Event",
        "description": "Enables users to delete an event from the itinerary timeline."
      },
      {
        "title": "Generate Shareable Timeline Graphic",
        "description": "Users can generate a visual, shareable graphic of their travel timeline for easy sharing."
      },
      {
        "title": "Receive Event Notifications",
        "description": "The app sends event notifications to users based on scheduled start times of their itinerary events."
      },
      {
        "title": "Edit Itinerary Metadata",
        "description": "Users can modify metadata such as the itinerary name, description, or other high-level details."
      }
    ],
    "FeatureDependencyGraph": "TT003_trip_itinerary_management.dot"
  },
  {
    "ProjectID": "EC001",
    "type": "E-Commerce",
    "ProjectName": "Shopping List",
    "InputPrompt": "Develop a shopping list app that allows users to collect products they wish to purchase. Each product requiring at least a name. Optional fields include category (default is 'Other'), price (default is 0), status (whether purchased or not, default is 'Not Purchased'), an image (default is none), and a purchase link (default is none). Products can be grouped into lists, and the app will automatically update and display the total value of each shopping list. Users can edit or delete any products they've added in the shopping list. Additionally, users can track the price history of each product, which should be updated when the user modifies the price. Users can share their shopping lists.",
    "FeatureList": [
      {
        "title": "Create Shopping List",
        "description": "Allows users to create a new shopping list where they can add products."
      },
      {
        "title": "View Shopping List",
        "description": "Displays the shopping list with the products added, including their details and total value."
      },
      {
        "title": "Add Product to Shopping List",
        "description": "Enables users to add products to their shopping list with essential and optional fields such as name, category, price, status, image, and purchase link."
      },
      {
        "title": "Calculate Total Value",
        "description": "Automatically calculates and displays the total value of the shopping list, taking into account all added products."
      },
      {
        "title": "Delete Product",
        "description": "Allows users to remove products from their shopping list."
      },
      {
        "title": "Edit Product Details",
        "description": "Allows users to modify the details of a product, such as name, category, price, status, image, and purchase link."
      },
      {
        "title": "Track Product Price History",
        "description": "Enables users to track the price history of a product, updating whenever the price is modified."
      },
      {
        "title": "View Product Details",
        "description": "Displays detailed information of a selected product, including its current price, status, and history."
      },
      {
        "title": "Share Shopping List",
        "description": "Allows users to share their shopping list with others."
      }
    ],
    "FeatureDependencyGraph": "EC001_shopping_list.dot"
  },
  {
    "ProjectID": "DB001",
    "type": "DeliveryBuiness",
    "ProjectName": "Online Drink Shop (Client)",
    "InputPrompt": "Develop a client-side ordering application. The app is designed for a local tea shop. The system should have a set of product and category information already built in the database. To use the app, users must first register and log in. Users can browse a selection of drinks organized by categories or search for specific items using keywords. Each drink can be customized with three options: sweetness level, ice level, and additional toppings. Users can add desired drinks to their shopping cart, where they can view the list of items and the total amount. The app operates on a 'prepaid token' system. Each user is initially provided with 100 tokens, which they can use to make purchases. If the balance is insufficient, payment will fail. Users can also top up their tokens virtually at any time. Additionally, users have the option to change their account password at any time. After a successful purchase, users will receive a notification for pick up in 30 minutes. The app also provides a feature to view past orders, with an option to quickly reorder a previous purchase ('Reorder').",
    "FeatureList": [
      {
        "title": "User Registration",
        "description": "Allow users to register an account to use the app."
      },
      {
        "title": "User Login",
        "description": "Enable users to log into their accounts to access the app's features."
      },
      {
        "title": "Browse Drinks by Categories",
        "description": "Allow users to browse available drinks, categorized for easier navigation."
      },
      {
        "title": "Search Drinks",
        "description": "Allow users to search for drinks by keywords to quickly find specific items."
      },
      {
        "title": "Customize Drink",
        "description": "Provide options for users to customize their drinks, including sweetness level, ice level, and additional toppings."
      },
      {
        "title": "Add Drink to Cart",
        "description": "Enable users to add customized drinks to their shopping cart for later purchase."
      },
      {
        "title": "View Shopping Cart",
        "description": "Allow users to view the list of items in their shopping cart along with the total amount."
      },
      {
        "title": "Checkout with Tokens",
        "description": "Allow users to complete their purchase using the prepaid token system. If the token balance is insufficient, the payment will fail."
      },
      {
        "title": "Order Notification",
        "description": "Notify users when their order is ready for pickup, typically after 30 minutes."
      },
      {
        "title": "View Order History",
        "description": "Enable users to view their past orders, providing a record of previous purchases."
      },
      {
        "title": "Reorder from History",
        "description": "Allow users to quickly reorder a previous purchase from their order history."
      },
      {
        "title": "Top Up Tokens",
        "description": "Allow users to add more tokens to their account at any time to ensure they can continue making purchases."
      },
      {
        "title": "Change Password",
        "description": "Allow users to change their account password at any time for security purposes."
      }
    ],
    "FeatureDependencyGraph": "DB001_online_drink_shop_(client).dot"
  },
  {
    "ProjectID": "DB002",
    "type": "DeliveryBuiness",
    "ProjectName": "Online Drink Shop (Merchant)",
    "InputPrompt": "Develop a merchant-side online shop management application which allows merchants to manage their online store efficiently. After registering and logging in, merchants can have a a store preview, which lets merchants review their store’s basic layout and navigation before going live. They can update their store's product catalog by adding, editing, or deleting products and categories as needed. Merchants can also modify their account password at any time for security purposes. The system supports payment integration by enabling merchants to set up their Alipay and WeChat Pay accounts for seamless payment processing. Merchants can view both ongoing and completed orders, with predefined sample data available in the system database for testing. Merchants have the option to mark unfinished orders as completed. ",
    "FeatureList": [
      {
        "title": "Merchant Registration",
        "description": "Allows merchants to register an account to access the online shop management system."
      },
      {
        "title": "Merchant Login",
        "description": "Enables merchants to log in to the system using their credentials."
      },
      {
        "title": "Store Preview",
        "description": "Provides a preview of the store’s layout and navigation before going live, allowing merchants to review and make adjustments."
      },
      {
        "title": "Add Product",
        "description": "Allows merchants to add new products to their online store catalog."
      },
      {
        "title": "Edit Product",
        "description": "Enables merchants to edit existing product details in their online store catalog."
      },
      {
        "title": "Delete Product",
        "description": "Allows merchants to delete products from their online store catalog."
      },
      {
        "title": "Change Password",
        "description": "Enables merchants to update their account password for security purposes."
      },
      {
        "title": "Set Payment Account",
        "description": "Allows merchants to set up their Alipay and WeChat Pay accounts for seamless payment processing."
      },
      {
        "title": "View Orders",
        "description": "Allows merchants to view both ongoing and completed orders in the system."
      },
      {
        "title": "Mark Uncomplete Order as Completed",
        "description": "Provides an option to mark unfinished orders as completed in the system."
      }
    ],
    "FeatureDependencyGraph": "DB002_online_drink_shop_(merchant).dot"
  }
]